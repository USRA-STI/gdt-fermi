#!/usr/bin/env python
# legacy wrapper around dol.py for use with rmfitBA

# CONTAINS TECHNICAL DATA/COMPUTER SOFTWARE DELIVERED TO THE U.S. GOVERNMENT WITH UNLIMITED RIGHTS
#
# Developed by: Joshua Wood
#               National Aeronautics and Space Administration (NASA)
#               Marshall Space Flight Center
#               Astrophysics Branch (ST-12)
#
# Very closely based on the program DoL (Daughter of Locburst).
# Written by:
#               Valerie Connaughton
#               University of Alabama in Huntsville (UAH)
#
# Included in the Gamma-ray Data Tools with permission from UAH
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing permissions and limitations under the
# License.
#

import os
import sys

from gdt.missions.fermi.gbm.localization.dol.legacy_dol import legacy_DoL

nen = legacy_DoL.default_nen
ndet = legacy_DoL.default_ndet
ldet = legacy_DoL.default_ldet

# build command to run legacy dol module
cmd = sys.executable + " -m gdt.missions.fermi.gbm.localization.dol.legacy_dol"

# add command line options
opts = [{'opt': ' --crange', 'narg': 2},
        {'opt': ' --mrates', 'narg': ndet * nen},
        {'opt': ' --brates', 'narg': ndet * nen},
        {'opt': ' --sduration', 'narg': 1},
        {'opt': ' --bgduration', 'narg': 1},
        {'opt': ' --sc_pos', 'narg': 3},
        {'opt': ' --sc_quat', 'narg': 4},
        {'opt': ' --energies', 'narg': nen + 1},
        {'opt': ' --fra', 'narg': 1},
        {'opt': ' --fdec', 'narg': 1},
        {'opt': ' --sc_time', 'narg': 1},
        {'opt': ' --scat_opt', 'narg': 1},
        {'opt': ' --fname', 'narg': 1}]

pos = 1
for o in opts:
    cmd += " " + o['opt'] + ((" %s" * o['narg']) % tuple(sys.argv[pos:pos + o['narg']]))
    pos += o['narg']

os.system(cmd)
